{"version":3,"sources":["components/AppStyled.js","components/ContactForm/ContactFormStyled.js","components/Notifications/NotificationsStyled.js","components/Notifications/Notifications.js","components/ContactForm/ContactForm.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactFormContainer.js","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Form","form","Div","Empty","ByUsed","ContactForm","state","name","number","showEmptyNtf","showByUsedNtf","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","toLowerCase","trim","onSubmit","this","id","className","type","onChange","placeholder","CSSTransition","in","onEntered","timeout","classNames","unmountOnExit","Component","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","changeFilter","axios","defaults","baseURL","getContacts","dispatch","a","contactsActions","get","data","addContact","payload","post","delContact","delete","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContacts","createSelector","includes","mDTP","contactsOperations","connect","contactsSelectors","ContactList","onDeleteContact","onHandleDelete","length","TransitionGroup","component","map","onClick","Label","label","Filter","App","onGetContacts","isLoadingContacts","appear","isError","createReducer","_","action","toString","combineReducers","store","configureStore","reducer","contactsReduser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84c01018.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .loading {\n    position: absolute;\n    left: 10%;\n    top: 0;\n    color: royalblue;\n    font-size: 18px;\n  }\n\n  .error {\n    color: salmon;\n    font-size: 18px;\n    font-weight: 700;\n    font-style: oblique;\n  }\n\n  .h1Title {\n    text-align: center;\n    margin-bottom: 30px;\n    font-size: 46px;\n    color: honeydew;\n  }\n\n  .h2Title {\n    margin-bottom: 30px;\n    font-size: 32px;\n    color: honeydew;\n  }\n\n  .text {\n    font-size: 18px;\n    font-style: italic;\n    color: salmon;\n  }\n\n  .h1-appear {\n    transform: translateX(-300%);\n  }\n\n  .h1-appear-active {\n    transform: translateX(0);\n    transition: transform 500ms linear;\n  }\n\n  .filterScale-enter {\n    opacity: 0;\n    transform: scale(0.1);\n  }\n  .filterScale-enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 250ms linear;\n  }\n  .filterScale-exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n  .filterScale-exit-active {\n    opacity: 0;\n    transform: scale(0.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Form = styled.form`\n  padding: 10px;\n  margin-bottom: 50px;\n  border: 1px dotted orange;\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    color: honeydew;\n    font-size: 22px;\n    font-weight: 700;\n  }\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .submitBtn {\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n    min-width: 80px;\n    height: 25px;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    background-color: honeydew;\n    color: black;\n    font-weight: 700;\n    font-size: 14px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: springgreen;\n    }\n  }\n\n  .ntf-enter {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  .ntf-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms linear;\n  }\n  .ntf-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n  .ntf-exit-active {\n    opacity: 0;\n    transform: translateX(100%);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Form;\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  right: 3%;\n  bottom: 80%;\n  text-align: center;\n  padding: 10px;\n  min-width: 100px;\n  height: 70px;\n  background-color: orange;\n  color: black;\n`;\n\nexport default Div;\n","import Div from \"./NotificationsStyled\";\n\nexport const Empty = () => {\n  return (\n    <Div>\n      <p>Enter the contact's name and(or) phone number!</p>\n    </Div>\n  );\n};\n\nexport const ByUsed = () => {\n  return (\n    <Div>\n      <p>Is already in use!</p>\n    </Div>\n  );\n};\n","import { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Form from \"./ContactFormStyled\";\nimport { Empty, ByUsed } from \"../Notifications/Notifications\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    showEmptyNtf: false,\n    showByUsedNtf: false,\n  };\n\n  handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (\n      this.props.contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setState((state) => ({ showByUsedNtf: !state.showByUsedNtf }));\n    } else if (\n      this.props.contacts.find((contact) => contact.number === number)\n    ) {\n      this.setState((state) => ({ showByUsedNtf: !state.showByUsedNtf }));\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      this.setState((state) => ({ showEmptyNtf: !state.showEmptyNtf }));\n    } else {\n      this.props.onSubmit({ name, number });\n    }\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number, showEmptyNtf, showByUsedNtf } = this.state;\n\n    return (\n      <>\n        <Form id=\"contact\" onSubmit={this.handleSubmit}>\n          <label className=\"label\">\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              placeholder=\"Type to name\"\n            />\n          </label>\n\n          <label className=\"label\">\n            Phone number\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              placeholder=\"Type to phone(e.g. 111-11-11)\"\n            />\n          </label>\n\n          <button type=\"submit\" className=\"submitBtn\">\n            Add contact\n          </button>\n        </Form>\n\n        <CSSTransition\n          in={showEmptyNtf}\n          onEntered={() => this.setState({ showEmptyNtf: false })}\n          timeout={2000}\n          classNames=\"ntf\"\n          unmountOnExit\n        >\n          <Empty />\n        </CSSTransition>\n\n        <CSSTransition\n          in={showByUsedNtf}\n          onEntered={() => this.setState({ showByUsedNtf: false })}\n          timeout={2000}\n          classNames=\"ntf\"\n          unmountOnExit\n        >\n          <ByUsed />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst getContactsRequest = createAction(\"contacts/getRequest\");\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\nconst getContactsError = createAction(\"contacts/getError\");\n\nconst addContactRequest = createAction(\"contact/addRequest\");\nconst addContactSuccess = createAction(\"contact/addSuccess\");\nconst addContactError = createAction(\"contact/addError\");\n\nconst delContactRequest = createAction(\"contact/delRequest\");\nconst delContactSuccess = createAction(\"contact/delSuccess\");\nconst delContactError = createAction(\"contact/delError\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  changeFilter,\n};\n","import axios from \"axios\";\nimport contactsActions from \"./contactsActions\";\n\naxios.defaults.baseURL = \"http://localhost:2000\";\n\nconst getContacts = () => async (dispatch) => {\n  dispatch(contactsActions.getContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(contactsActions.getContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.getContactsError(error));\n  }\n};\n\nconst addContact = (payload) => async (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n\n  try {\n    const { data } = await axios.post(\"/contacts\", { ...payload });\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error));\n  }\n};\n\nconst delContact = (id) => async (dispatch) => {\n  dispatch(contactsActions.delContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(contactsActions.delContactSuccess(id));\n  } catch (error) {\n    dispatch(contactsActions.delContactError(error));\n  }\n};\n\nexport default { getContacts, addContact, delContact };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = (state) => state.contacts.items;\nconst getLoading = (state) => state.contacts.loading;\nconst getError = (state) => state.contacts.error;\nconst getFilter = (state) => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport default {\n  getContacts,\n  getFilter,\n  getLoading,\n  getError,\n  getVisibleContacts,\n};\n","import { connect } from \"react-redux\";\nimport ContactForm from \"./ContactForm\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nconst mSTP = (state) => {\n  return { contacts: contactsSelectors.getContacts(state) };\n};\n\nconst mDTP = {\n  onSubmit: contactsOperations.addContact,\n};\n\nexport default connect(mSTP, mDTP)(ContactForm);\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  .contactList__item {\n    width: 400px;\n    display: flex;\n    justify-content: space-around;\n    align-items: baseline;\n    color: springgreen;\n    font-size: 19px;\n    font-weight: 500;\n\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n\n  .delBtn {\n    display: flex;\n    align-items: center;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    min-width: 20px;\n    height: 25px;\n    padding: 10px;\n    background-color: honeydew;\n    color: black;\n    font-weight: 500;\n    font-size: 12px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: salmon;\n    }\n  }\n\n  .itemFade-enter {\n    opacity: 0;\n    transform: translateX(200%);\n  }\n\n  .itemFade-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms linear;\n  }\n\n  .itemFade-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  .itemFade-exit-active {\n    opacity: 0;\n    transform: translateX(-200%);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Div;\n","import { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Div from \"./ContactListStyled\";\n\nconst ContactList = ({ contacts, value, onDeleteContact, onChange }) => {\n  const onHandleDelete = (evt) => {\n    const { id } = evt.currentTarget;\n\n    onDeleteContact(id);\n\n    if (\n      contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(value.toLowerCase())\n      ).length < 2\n    ) {\n      onChange(\"\");\n    }\n  };\n\n  return (\n    <Div>\n      <TransitionGroup component=\"ul\">\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"itemFade\">\n            <li className=\"contactList__item\">\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                className=\"delBtn\"\n                type=\"button\"\n                id={id}\n                onClick={onHandleDelete}\n              >\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </Div>\n  );\n};\n\nexport default ContactList;\n","import { connect } from \"react-redux\";\nimport ContactList from \"./ContactList\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nconst mSTP = (state) => {\n  return {\n    contacts: contactsSelectors.getVisibleContacts(state),\n    value: contactsSelectors.getFilter(state),\n  };\n};\n\nconst mDTP = {\n  onDeleteContact: contactsOperations.delContact,\n  onChange: contactsActions.changeFilter,\n};\n\nexport default connect(mSTP, mDTP)(ContactList);\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: honeydew;\n  font-size: 22px;\n  font-weight: 700;\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .filterScale-enter {\n    opacity: 0;\n    transform: scale(0.1);\n  }\n\n  .filterScale-enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 250ms linear;\n  }\n\n  .filterScale-exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  .filterScale-exit-active {\n    opacity: 0;\n    transform: scale(0.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport default Label;\n","import Label from \"./FilterStyled\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={value}\n        onChange={(evt) => onChange(evt.currentTarget.value)}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { connect } from \"react-redux\";\nimport Filter from \"./Filter\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nconst mSTP = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mDTP = {\n  onChange: contactsActions.changeFilter,\n};\n\nexport default connect(mSTP, mDTP)(Filter);\n","import { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport Container from \"./AppStyled\";\nimport ContactForm from \"./ContactForm/ContactFormContainer\";\nimport ContactList from \"./ContactList/ContactListContainer\";\nimport Filter from \"./Filter/FilterContainer\";\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\nimport contactsSelectors from \"../redux/contacts/contactsSelectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetContacts();\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.props.isLoadingContacts && <p className=\"loading\">Loading...</p>}\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"h1\"\n          unmountOnExit\n        >\n          <h1 className=\"h1Title\">Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm />\n        <h2 className=\"h2Title\">Contacts</h2>\n\n        <CSSTransition\n          in={this.props.contacts.length > 1}\n          classNames=\"filterScale\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n\n        {!this.props.isError && <ContactList />}\n\n        {this.props.isError && (\n          <p className=\"error\">ERR! Something went wrong...</p>\n        )}\n\n        {!this.props.isLoadingContacts &&\n          !this.props.isError &&\n          !this.props.contacts.length && (\n            <p className=\"text\">Your phonebook is empty. Please add contact.</p>\n          )}\n      </Container>\n    );\n  }\n}\n\nconst mSTP = (state) => {\n  return {\n    contacts: contactsSelectors.getContacts(state),\n    isLoadingContacts: contactsSelectors.getLoading(state),\n    isError: contactsSelectors.getError(state),\n  };\n};\n\nconst mDTP = {\n  onGetContacts: contactsOperations.getContacts,\n};\n\nexport default connect(mSTP, mDTP)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contactsActions\";\n\nconst getContacts = (_, action) => {\n  return action.payload;\n};\n\nconst addContact = (state, action) => {\n  return [...state, action.payload];\n};\n\nconst delContact = (state, action) => {\n  return state.filter((contact) => contact.id.toString() !== action.payload);\n};\n\nconst items = createReducer([], {\n  [contactsActions.getContactsSuccess]: getContacts,\n\n  [contactsActions.addContactSuccess]: addContact,\n\n  [contactsActions.delContactSuccess]: delContact,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.getContactsRequest]: () => true,\n  [contactsActions.getContactsSuccess]: () => false,\n  [contactsActions.getContactsError]: () => false,\n\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n\n  [contactsActions.delContactRequest]: () => true,\n  [contactsActions.delContactSuccess]: () => false,\n  [contactsActions.delContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [contactsActions.getContactsError]: (_, action) => action.payload,\n  [contactsActions.getContactsRequest]: () => null,\n\n  [contactsActions.addContactError]: (_, action) => action.payload,\n  [contactsActions.addContactRequest]: () => null,\n\n  [contactsActions.delContactError]: (_, action) => action.payload,\n  [contactsActions.delContactRequest]: () => null,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  error,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReduser from \"./contacts/contactsReducer\";\n\nconst store = configureStore({\n  reducer: { contacts: contactsReduser },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./base.css\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}